Лабораторная работа №2, 2 задание.

Условие:
Создать класс Double, имитирующий стандартный тип double,
реализовав подходящие конструкторы. Реализовать методы методов ввода
read() и вывода display(),методы сложения и вычитания, а также метод
возведения в произвольную степень.

Алгоритм выполнения:

1. Включить заголовочный файл `<iostream>` для работы со стандартными потоками ввода/вывода.
2. Включить заголовочный файл `<cmath>` для использования функции `pow()`.
3. Включить заголовочный файл `<windows.h>` для использования функций работы с Windows API.
4. Включить заголовочный файл `<locale.h>` для установки локали.
5. Использовать пространство имен `std`.
6. Определить класс `Double`, который содержит приватный элемент данных `num`, конструктор `Double()`, методы `read()`, `display()`, `operator+()`, `operator-()` и `power()`.
7. В методе `read()` запросить у пользователя ввод значения и сохранить его в `num`.
8. В методе `display()` вывести значение `num` на экран.
9. В методе `operator+()` создать объект `Double temp`, вычислить сумму `num` и `d.num` и сохранить результат в `temp.num`, затем вернуть `temp`.
10. В методе `operator-()` создать объект `Double temp`, вычислить разность `num` и `d.num` и сохранить результат в `temp.num`, затем вернуть `temp`.
11. В методе `power()` создать объект `Double temp`, вычислить `num` в степени `n` с помощью функции `pow()` и сохранить результат в `temp.num`, затем вернуть `temp`.
12. В функции `main()` установить кодировку консоли, установить локаль для корректного отображения русских символов.
13. Создать два объекта `d1` и `d2` класса `Double`.
14. Вызвать метод `read()` для объекта `d1`.
15. Вызвать метод `read()` для объекта `d2`.
16. Создать объект `add` и присвоить ему результат сложения `d1` и `d2`, используя перегруженный оператор `+`.
17. Создать объект `sub` и присвоить ему результат вычитания `d1` и `d2`, используя перегруженный оператор `-`.
18. Запросить у пользователя степень `n`.
19. Создать объект `pow` и присвоить ему результат возведения `d1` в степень `n`, используя метод `power()`.
20. Вызвать метод `display()` для объекта `d1`.
21. Вызвать метод `display()` для объекта `d2`.
22. Вызвать метод `display()` для объекта `add`.
23. Вызвать метод `display()` для объекта `sub`.
24. Вызвать метод `display()` для объекта `pow`.
25. Завершить функцию `main()` и возвратить ноль для указания успешного завершения программы.

Запись выполнения: https://drive.google.com/file/d/1dKw3JFcdfeYdbTikd3L8SfdxvjXxiT_m/view?usp=sharing
